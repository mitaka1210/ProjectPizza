{"version":3,"sources":["components/assets/img/payment-method.svg","components/assets/img/pizza-logo.svg","components/assets/img/empty-cart.png","components/Button/Button.jsx","pages/Home.jsx","redux/action/pizzas.js","redux/action/filters.js","redux/action/card.js","components/Card/CartPage_1.jsx","components/Card/EmptyCart.jsx","pages/Card.jsx","components/header/Header.jsx","components/Button/ButtonCleanCart.jsx","components/Card/CardItem.jsx","components/categories/Element.js","components/categories/Categories.jsx","components/SortMenu/SortPopup.jsx","components/Button/ButtonAddPizza.jsx","components/Pizza/Pizza.jsx","components/Pizza/LoadingPizzaBlock.jsx","App.js","redux/reducer/filters.js","redux/reducer/pizzas.js","redux/reducer/card.js","redux/reducer/index.js","redux/store.js","index.js"],"names":["module","exports","Button","onClick","className","outline","useSelector","card","totalPrice","totalCount","to","classNames","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","categoryName","sortItems","name","type","order","Home","dispatch","useDispatch","items","pizzas","isLoaded","filters","category","sortBy","cardItems","useEffect","payload","axios","then","data","fetchPizzas","onSelectCategory","useCallback","index","onSelectSortType","handleAddPizzaToCard","obj","activeCategory","onClickCategory","activeSortType","onClickSortType","map","onClickAddPizza","addToCardCount","id","length","key","Array","_","CartPage_1","addedPizzas","Object","keys","onRemoveItem","window","confirm","removePizza","onPLusItem","plusCartItem","onMinusItem","minusCartItem","size","removeItem","onPlusCartItem","onMinusCartItem","href","EmptyCart","src","img1","alt","Card","Header","path","component","exact","logo2","logo","ButtonAddPizza","children","CardItem","alert","Navg","styled","ul","click","Categories","React","memo","hambur","useState","setClick","setButton","showButton","innerWidth","addEventListener","handleClick","e","defaultProps","SortPopup","showPopup","setShowPopup","sortRef","useRef","handleOutsideClick","composedPath","includes","current","activeMenuName","find","document","body","ref","onSelectItem","Pizza","imageUrl","price","types","sizes","typesNames","availableSizesPizza","activeType","setActiveType","activeSize","setActiveSize","console","log","onSelectType","active","disabled","onSelectSize","LoadingPizzaBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","App","initialState","state","action","getTotalPrice","arr","reduce","sum","getTotalSum","values","split","firstKey","val","_get","currentIdPizzaItem","newItems","currentTotalPrice","currentTotalCount","newObjItems","oldItems","slice","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1827768a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/payment-method.2d5c7cb8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pizza-logo.f3327011.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.ceb2faf0.png\";","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nfunction Button({ onClick, className, outline }) {\r\n  //const { totalPrice, totalCount } = useSelector(({ card }) => ({\r\n  //  totalPrice: card.totalPrice,\r\n  //  totalCount: card.totalCount,\r\n  //}));\r\n  //? Кратияки запис на горното връщанисе обект card и чрез диструктизация вземаме (изваждаме от обекта двете свойства totalPrice and totalCount)\r\n  const { totalPrice, totalCount } = useSelector(({ card }) => card);\r\n\r\n  return (\r\n    <Link to='/card'>\r\n      <button\r\n        onClick={onClick}\r\n        className={classNames('button', className, {\r\n          'button--outline': outline,\r\n        })}>\r\n        <span>{totalPrice}</span>\r\n        <div className='button__delimiter'></div>\r\n        <svg\r\n          width='18'\r\n          height='18'\r\n          viewBox='0 0 18 18'\r\n          fill='none'\r\n          xmlns='http://www.w3.org/2000/svg'>\r\n          <path\r\n            d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\r\n            stroke='white'\r\n            strokeWidth='1.8'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n          <path\r\n            d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\r\n            stroke='white'\r\n            strokeWidth='1.8'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n          <path\r\n            d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\r\n            stroke='white'\r\n            strokeWidth='1.8'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n          />\r\n        </svg>\r\n        <span>{totalCount}</span>\r\n      </button>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { Categories, SortPopup, Pizza, LoadingPizza } from '../components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCategory, setSortBy } from '../redux/action/filters';\r\nimport { fetchPizzas } from '../redux/action/pizzas';\r\nimport { addPizzaToCard } from '../redux/action/card';\r\n\r\nconst categoryName = ['Meat', 'Vegetarian', 'Grill', 'Sharp', 'Closed'];\r\n\r\nconst sortItems = [\r\n  { name: 'popular', type: 'popular', order: 'desc' },\r\n  { name: 'price', type: 'price', order: 'desc' },\r\n  { name: 'alphabet', type: 'name', order: 'asc' },\r\n];\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector(({ pizzas }) => {\r\n    return {\r\n      items: pizzas.items,\r\n    };\r\n  });\r\n  const { isLoaded } = useSelector(({ pizzas }) => {\r\n    return {\r\n      isLoaded: pizzas.isLoaded,\r\n    };\r\n  });\r\n  const { category, sortBy } = useSelector(({ filters }) => filters);\r\n  const cardItems = useSelector(({ card }) => card.items);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPizzas(sortBy, category));\r\n  }, [category, sortBy]);\r\n\r\n  const onSelectCategory = useCallback((index) => {\r\n    dispatch(setCategory(index));\r\n  }, []);\r\n  const onSelectSortType = useCallback((type) => {\r\n    dispatch(setSortBy(type));\r\n  }, []);\r\n\r\n  const handleAddPizzaToCard = (obj) => {\r\n    dispatch(addPizzaToCard(obj));\r\n  };\r\n  return (\r\n    <section className='container'>\r\n      <div className='content__top'>\r\n        <Categories\r\n          activeCategory={category}\r\n          onClickCategory={onSelectCategory}\r\n          items={categoryName}\r\n        />\r\n        <SortPopup\r\n          activeSortType={sortBy.type}\r\n          items={sortItems}\r\n          onClickSortType={onSelectSortType}\r\n        />\r\n      </div>\r\n      <h2 className='content__title'>All Pizzas</h2>\r\n      <div className='content__items'>\r\n        {isLoaded\r\n          ? items.map((obj) => (\r\n              <Pizza\r\n                onClickAddPizza={handleAddPizzaToCard}\r\n                addToCardCount={cardItems[obj.id] && cardItems[obj.id].items.length}\r\n                key={`${obj}_${obj.id}`}\r\n                {...obj}\r\n              />\r\n            ))\r\n          : Array(10)\r\n              .fill()\r\n              .map((_, index) => <LoadingPizza key={index} />)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import * as axios from 'axios';\r\n//?====================================================\r\nconst setPizzas = 'SET_PIZZAS';\r\nconst SET_LOADED = 'SET_LOADED';\r\n\r\n//?====================================================\r\nexport const setLoaded = (payload) => ({\r\n  type: SET_LOADED,\r\n  payload: payload,\r\n});\r\n//?====================================================\r\nexport const setPizza = (items) => ({\r\n  type: setPizzas,\r\n  payload: items,\r\n});\r\n//?====================================================\r\nexport const fetchPizzas = (sortBy, category) => (dispatch) => {\r\n  dispatch(setLoaded(false));\r\n  axios\r\n    .get(\r\n      `/pizzas?${category !== null ? `category=${category}` : ''}&_sort=${sortBy.type}&_order=${\r\n        sortBy.order\r\n      }`,\r\n    )\r\n    .then(({ data }) => {\r\n      dispatch(setPizza(data));\r\n    });\r\n};\r\n","const SET_SORT_BY = 'SET_SORT_BY';\r\nconst SET_CATEGORY = 'SET_CATEGORY';\r\n//?====================================================\r\nexport const setSortBy = ({ type, order }) => ({\r\n  type: SET_SORT_BY,\r\n  payload: { type, order },\r\n});\r\n//?====================================================\r\nexport const setCategory = (catIndex) => ({\r\n  type: SET_CATEGORY,\r\n  payload: catIndex,\r\n});\r\n","const addPizzCard = 'ADD_PIZZA_CARD';\r\nconst clearCart = 'CLEAR_CART';\r\nconst removeCartItem = 'REMOVE_CART_ITEM';\r\nconst onClickPlusCart = 'PLUS_CART_ITEM';\r\nconst onClickMinusCart = 'MINUS_CART_ITEM';\r\n//?====================================================\r\nexport const addPizzaToCard = (pizzaObj) => ({\r\n  type: addPizzCard,\r\n  payload: pizzaObj,\r\n});\r\n//?====================================================\r\nexport const clearAllCart = () => ({\r\n  type: clearCart,\r\n});\r\n//?====================================================\r\nexport const removePizza = (id) => ({\r\n  type: removeCartItem,\r\n  payload: id,\r\n});\r\n//?====================================================\r\nexport const plusCartItem = (id) => ({\r\n  type: onClickPlusCart,\r\n  payload: id,\r\n});\r\n//?====================================================\r\nexport const minusCartItem = (id) => ({\r\n  type: onClickMinusCart,\r\n  payload: id,\r\n});\r\n","import React from 'react';\r\nimport { CardItem } from '../../components/';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { clearAllCart, removePizza, minusCartItem, plusCartItem } from '../../redux/action/card';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nfunction CartPage_1() {\r\n  const dispatch = useDispatch();\r\n  const { totalPrice, totalCount, items } = useSelector(({ card }) => card);\r\n  const addedPizzas = Object.keys(items).map((key) => {\r\n    return items[key].items[0];\r\n  });\r\n\r\n  const onClearCart = () => {\r\n    if (window.confirm('You are shore?')) {\r\n      dispatch(clearAllCart());\r\n    }\r\n  };\r\n  const onRemoveItem = (id) => {\r\n    if (window.confirm('You are shore?')) {\r\n      dispatch(removePizza(id));\r\n    }\r\n  };\r\n\r\n  const onPLusItem = (id) => {\r\n    dispatch(plusCartItem(id));\r\n  };\r\n  const onMinusItem = (id) => {\r\n    dispatch(minusCartItem(id));\r\n  };\r\n  return (\r\n    <div className='cart'>\r\n      <div className='cart__top'>\r\n        <h2 className='content__title'>\r\n          <svg\r\n            width='18'\r\n            height='18'\r\n            viewBox='0 0 18 18'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'>\r\n            <path\r\n              d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\r\n              stroke='white'\r\n              strokeWidth='1.8'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n            <path\r\n              d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\r\n              stroke='white'\r\n              strokeWidth='1.8'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n            <path\r\n              d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\r\n              stroke='white'\r\n              strokeWidth='1.8'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n          </svg>\r\n          Bin\r\n        </h2>\r\n        <div className='cart__clear'>\r\n          <svg\r\n            width='20'\r\n            height='20'\r\n            viewBox='0 0 20 20'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'>\r\n            <path\r\n              d='M2.5 5H4.16667H17.5'\r\n              stroke='#B6B6B6'\r\n              strokeWidth='1.2'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n            <path\r\n              d='M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z'\r\n              stroke='#B6B6B6'\r\n              strokeWidth='1.2'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n            <path\r\n              d='M8.33337 9.16667V14.1667'\r\n              stroke='#B6B6B6'\r\n              strokeWidth='1.2'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n            <path\r\n              d='M11.6666 9.16667V14.1667'\r\n              stroke='#B6B6B6'\r\n              strokeWidth='1.2'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n          </svg>\r\n\r\n          <span onClick={onClearCart}>Clear Cart</span>\r\n        </div>\r\n      </div>\r\n      <div className='content__items'>\r\n        {addedPizzas.map((obj) => (\r\n          <CardItem\r\n            id={obj.id}\r\n            name={obj.name}\r\n            type={obj.type}\r\n            size={obj.size}\r\n            key={obj.id}\r\n            totalPrice={items[obj.id].totalPrice}\r\n            totalCount={items[obj.id].items.length}\r\n            removeItem={onRemoveItem}\r\n            onPlusCartItem={onPLusItem}\r\n            onMinusCartItem={onMinusItem}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className='cart__bottom'>\r\n        <div className='cart__bottom-details'>\r\n          <span>\r\n            All Pizzas: <b>{totalCount}</b>\r\n          </span>\r\n          <span>\r\n            Total Price: <b>{totalPrice}</b>\r\n          </span>\r\n        </div>\r\n        <div className='cart__bottom-buttons'>\r\n          <a href='/' className='button button--outline button--add go-back-btn'>\r\n            <svg\r\n              width='8'\r\n              height='14'\r\n              viewBox='0 0 8 14'\r\n              fill='none'\r\n              xmlns='http://www.w3.org/2000/svg'>\r\n              <path\r\n                d='M7 13L1 6.93015L6.86175 1'\r\n                stroke='#D3D3D3'\r\n                strokeWidth='1.5'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n              />\r\n            </svg>\r\n\r\n            <Link to='/'>\r\n              <span>Go back</span>\r\n            </Link>\r\n          </a>\r\n          <div className='button pay-btn'>\r\n            <span>Pay now</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartPage_1;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport img1 from '../assets/img/empty-cart.png';\r\nfunction EmptyCart() {\r\n  return (\r\n    <div className='container container--cart'>\r\n      <div className='cart cart--empty'>\r\n        <h2>\r\n          Cart is empty <i>😕</i>\r\n        </h2>\r\n        <p>\r\n          You probably haven't ordered a pizza yet.\r\n          <br />\r\n          To order pizza, go to the main page..\r\n        </p>\r\n        <img src={img1} alt='Empty cart' />\r\n        <Link to='/' className='button button--black'>\r\n          <span>Go Back</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyCart;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CartPage from '../components/Card/CartPage_1';\r\nimport EmptyCart from '../components/Card/EmptyCart';\r\nfunction Card() {\r\n  const { totalCount } = useSelector(({ card }) => card);\r\n\r\n  return (\r\n    <div className='content'>\r\n      <div className='container container--cart'>{totalCount ? <CartPage /> : <EmptyCart />}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport logo2 from '../assets/img/payment-method.svg';\r\nimport logo from '../assets/img/pizza-logo.svg';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Card, Home } from '../../pages';\r\nfunction Header() {\r\n  return (\r\n    <header className='header'>\r\n      <div className='container'>\r\n        <Link to='/'>\r\n          <div className='header__logo'>\r\n            <Route path='/card' component={Card} exact>\r\n              <img width='38' src={logo2} alt='Pizza logo' />\r\n            </Route>\r\n            <Route path='/' component={Home} exact>\r\n              <img width='38' src={logo} alt='Pizza logo' />\r\n            </Route>\r\n\r\n            <div>\r\n              <h1>React Pizza</h1>\r\n              <p>\r\n                The <b>Best</b> pizza in the <b>World</b>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n        <div className='header__cart'>\r\n          <Button className='button button--cart' />\r\n          {/*<a href='/cart.html' className='button button--cart'>*/}\r\n\r\n          {/*<span>520 ₽</span>\r\n            <div className='button__delimiter'></div>\r\n            <svg\r\n              width='18'\r\n              height='18'\r\n              viewBox='0 0 18 18'\r\n              fill='none'\r\n              xmlns='http://www.w3.org/2000/svg'>\r\n              <path\r\n                d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\r\n                stroke='white'\r\n                strokeWidth='1.8'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n              />\r\n              <path\r\n                d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\r\n                stroke='white'\r\n                strokeWidth='1.8'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n              />\r\n              <path\r\n                d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\r\n                stroke='white'\r\n                strokeWidth='1.8'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n              />\r\n            </svg>\r\n            <span>3</span>*/}\r\n          {/*</a>*/}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nfunction ButtonAddPizza({ onClick, className, outline, children }) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={classNames('button', className, {\r\n        'button--outline': outline,\r\n      })}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButtonAddPizza.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ButtonAddPizza;\r\n","import React from 'react';\r\nimport Button from '../Button/ButtonCleanCart';\r\n\r\nfunction CardItem({\r\n  id,\r\n  type,\r\n  size,\r\n  name,\r\n  totalPrice,\r\n  totalCount,\r\n  removeItem,\r\n  onPlusCartItem,\r\n  onMinusCartItem,\r\n}) {\r\n  const handlerClickRemove = () => {\r\n    removeItem(id);\r\n  };\r\n  const handlerClickPLus = () => {\r\n    alert('PLUS');\r\n    onPlusCartItem(id);\r\n  };\r\n  const handlerClickMinus = () => {\r\n    alert('MINUS');\r\n    onMinusCartItem(id);\r\n  };\r\n\r\n  return (\r\n    <div className='cart__item'>\r\n      <div className='cart__item-img'>\r\n        <img\r\n          className='pizza-block__image'\r\n          src='https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg'\r\n          alt='Pizza'\r\n        />\r\n      </div>\r\n      <div className='cart__item-info'>\r\n        <h3>{name}</h3>\r\n        <p>\r\n          {type ? 'thin' : ''} testo, {size}см.\r\n        </p>\r\n        <p>\r\n          {type ? 'tradi' : ''} testo, {size}см.\r\n        </p>\r\n      </div>\r\n      <div className='cart__item-count'>\r\n        <div\r\n          onClick={handlerClickMinus}\r\n          className='button button--outline button--circle cart__item-count-minus'>\r\n          <svg\r\n            width='10'\r\n            height='10'\r\n            viewBox='0 0 10 10'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'>\r\n            <path\r\n              d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\r\n              fill='#EB5A1E'\r\n            />\r\n            <path\r\n              d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\r\n              fill='#EB5A1E'\r\n            />\r\n          </svg>\r\n        </div>\r\n\r\n        <b>{totalCount}</b>\r\n        <div\r\n          onClick={handlerClickPLus}\r\n          className='button button--outline button--circle cart__item-count-plus'>\r\n          <svg\r\n            width='10'\r\n            height='10'\r\n            viewBox='0 0 10 10'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'>\r\n            <path\r\n              d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\r\n              fill='#EB5A1E'\r\n            />\r\n            <path\r\n              d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\r\n              fill='#EB5A1E'\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div className='cart__item-price'>\r\n        {/*<b>500 $</b>*/}\r\n        <b>{totalPrice} $</b>\r\n      </div>\r\n      <div className='cart__item-remove'>\r\n        <Button onClick={handlerClickRemove} className='button--circle' outline>\r\n          <svg\r\n            width='10'\r\n            height='10'\r\n            viewBox='0 0 10 10'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'>\r\n            <path\r\n              d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\r\n              fill='#EB5A1E'\r\n            />\r\n            <path\r\n              d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\r\n              fill='#EB5A1E'\r\n            />\r\n          </svg>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","import styled from 'styled-components';\r\nexport const Navg = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  //  width: 100%;\r\n  //  height: 90vh;\r\n  //  position: absolute;\r\n  //  top: 80px;\r\n  //  left: ${({ click }) => (click ? 0 : '-100%')};\r\n  //  opacity: 1;\r\n  //  transition: all 0.5s ease;\r\n  //  background: #101522;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: fixed;\r\n    top: 0px;\r\n    left: ${({ click }) => (click ? 0 : '-100%')};\r\n    opacity: 1;\r\n    transition: all 0.5s ease;\r\n    background: #101522;\r\n    padding-top: 10em;\r\n    z-index: 49;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\n\r\nimport { Navg } from './Element';\r\nconst Categories = React.memo(function Categories({\r\n  activeCategory,\r\n  items,\r\n  onClickCategory,\r\n  className,\r\n  hambur,\r\n}) {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 768) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n  window.addEventListener('resize', showButton);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  //const [btcolor, setColor] = useState(false);\r\n  //const toggle = () => {\r\n  //  setColor(!btcolor);\r\n  //};\r\n  return (\r\n    <main className='categories'>\r\n      {/*<button className={btcolor ? 'bgr' : ''} onClick={toggle}>\r\n        hi\r\n      </button>*/}\r\n      <div className='MobileIcon ' onClick={handleClick}>\r\n        {click ? <FaTimes /> : <FaBars />}\r\n      </div>\r\n      <Navg onClick={handleClick} click={click}>\r\n        <li\r\n          className={activeCategory === null ? 'active' : ''}\r\n          onClick={() => onClickCategory(null)}>\r\n          All\r\n        </li>\r\n\r\n        {items &&\r\n          items.map((e, index) => (\r\n            <li\r\n              className={activeCategory === index ? 'active' : ''}\r\n              onClick={() => onClickCategory(index)}\r\n              key={`${e}_${index}`}>\r\n              {e}\r\n            </li>\r\n          ))}\r\n      </Navg>\r\n    </main>\r\n  );\r\n});\r\n\r\n//! Проверяваме  какви са типовете на пропс.Това което прави typeScript.Той проверява в DB. И ако там нещо се смени хвърля грешка в конзолата на браузъра.\r\n//?.arrayOf(PropTypes.number) - проверява да ли в масива има само числа и ако няма хвърля грешка.\r\nCategories.propTypes = {\r\n  //activeCategory: PropTypes.oneOf([PropTypes.number, null]),\r\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onClickCategory: PropTypes.func.isRequired,\r\n};\r\n////? Обеснявам  на компонента,че без тези данни неможе да живее и за даняма промеблеми да се хвърля грешка и приложенито да спре му задавам някакви начални (defaultProps) стойности за пропс.Това всичко ако нещо липсва  в DB.\r\nCategories.defaultProps = { activeCategory: null, items: [] };\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//TODO: дългия запис на ref={sortRef} това е:\r\n//ref={(elem) => {\r\n//\tsortRef.current = elem;\r\n// }}\r\nconst SortPopup = React.memo(function SortPopup({ items, activeSortType, onClickSortType }) {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  //! Запазва точния път по дом дървото в този случай това е className=sort.\r\n  const sortRef = useRef();\r\n  const toggle = () => {\r\n    setShowPopup(!showPopup);\r\n  };\r\n  //? Тук проверяваме къде цъкаме по страницата. Ако сме кликнали на падащите менюта те се показват. Но ако сме някъде другаде те ще се скриват сами. Защото e.path.includes(sortRef.current) проверява къде кликаме по страницата ако пътя съвпадне показва падащато меню иначе го скрива.\r\n  const handleOutsideClick = (e) => {\r\n    const path = e.path || (e.composedPath && e.composedPath());\r\n    if (!path.includes(sortRef.current)) {\r\n      setShowPopup(false);\r\n    }\r\n  };\r\n  //! Зада може да се сменят менютата който падата създаме променлива и в нея записваме стойностите от който се държат в props.menu = имената на падащаите менюта и те започват да се сменят.\r\n\r\n  const activeMenuName = items.find((obj) => obj.type === activeSortType).name;\r\n  const onSelectItem = (index) => {\r\n    if (onClickSortType) {\r\n      onClickSortType(index);\r\n    }\r\n\r\n    setShowPopup(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('click', handleOutsideClick);\r\n  }, []);\r\n  return (\r\n    <div ref={sortRef} className='sort'>\r\n      <div className='sort__label'>\r\n        <svg\r\n          className={showPopup ? 'rotated' : ''}\r\n          width='10'\r\n          height='6'\r\n          viewBox='0 0 10 6'\r\n          fill='none'\r\n          xmlns='http://www.w3.org/2000/svg'>\r\n          <path\r\n            d='M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z'\r\n            fill='#2C2C2C'\r\n          />\r\n        </svg>\r\n        <b>Sort By:</b>\r\n        <span onClick={toggle}>{activeMenuName}</span>\r\n      </div>\r\n      {showPopup && (\r\n        <div className='sort__popup'>\r\n          <ul>\r\n            {items &&\r\n              items.map((obj, index) => (\r\n                <li\r\n                  className={activeSortType === obj.type ? 'active' : ''}\r\n                  onClick={() => onSelectItem(obj)}\r\n                  key={`${obj.type}_${index}`}>\r\n                  {obj.name}\r\n                </li>\r\n              ))}\r\n            ;\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\n//! Проверяваме  какви са типовете на пропс.Това което прави typeScript.Той проверява в DB. И ако там нещо се смени хвърля грешка в конзолата на браузъра.\r\n//?.arrayOf(PropTypes.number) - проверява да ли в масива има само числа и ако няма хвърля грешка.\r\nSortPopup.propTypes = {\r\n  activeSortType: PropTypes.string.isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClickSortType: PropTypes.func.isRequired,\r\n};\r\n////? Обеснявам  на компонента,че без тези данни неможе да живее и за даняма промеблеми да се хвърля грешка и приложенито да спре му задавам някакви начални (defaultProps) стойности за пропс.Това всичко ако нещо липсва  в DB.\r\nSortPopup.defaultProps = { items: [] };\r\nexport default SortPopup;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nfunction ButtonAddPizza({ onClick, className, outline, children }) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={classNames('button', className, {\r\n        'button--outline': outline,\r\n      })}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButtonAddPizza.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ButtonAddPizza;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Button from '../Button/ButtonAddPizza';\r\nfunction Pizza({ id, name, imageUrl, price, types, sizes, onClickAddPizza, addToCardCount }) {\r\n  const typesNames = ['thin ', 'traditional'];\r\n  const availableSizesPizza = [26, 30, 40];\r\n  const [activeType, setActiveType] = useState(types[0]);\r\n  const [activeSize, setActiveSize] = useState(0);\r\n  console.log(activeType);\r\n  const onSelectType = (index) => {\r\n    setActiveType(index);\r\n  };\r\n  const onSelectSize = (index) => {\r\n    setActiveSize(index);\r\n  };\r\n\r\n  const handleOnClickAddPizza = () => {\r\n    const obj = {\r\n      id,\r\n      name,\r\n      imageUrl,\r\n      price,\r\n      size: availableSizesPizza[activeSize],\r\n      type: typesNames[activeType],\r\n    };\r\n    onClickAddPizza(obj);\r\n  };\r\n  return (\r\n    <section>\r\n      <div className='pizza-block'>\r\n        <img className='pizza-block__image' src={imageUrl} alt='Pizza' />\r\n        <h4 className='pizza-block__title'>{name}</h4>\r\n        <div className='pizza-block__selector'>\r\n          <ul>\r\n            {typesNames.map((type, index) => (\r\n              <li\r\n                onClick={() => onSelectType(index)}\r\n                className={classNames({\r\n                  active: activeType === index,\r\n                  disabled: !types.includes(index),\r\n                })}\r\n                key={`${type}_ ${index}`}>\r\n                {type}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <ul>\r\n            {availableSizesPizza.map((size, index) => (\r\n              <li\r\n                onClick={() => onSelectSize(index)}\r\n                className={classNames({\r\n                  active: activeSize === index,\r\n                  disabled: !sizes.includes(size),\r\n                })}\r\n                key={`${size}_ ${index}`}>\r\n                {size} см.\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className='pizza-block__bottom'>\r\n          <div className='pizza-block__price'>от {price} ₽</div>\r\n          <Button onClick={handleOnClickAddPizza} className='button--add' outline>\r\n            <svg\r\n              width='12'\r\n              height='12'\r\n              viewBox='0 0 12 12'\r\n              fill='none'\r\n              xmlns='http://www.w3.org/2000/svg'>\r\n              <path\r\n                d='M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z'\r\n                fill='white'\r\n              />\r\n            </svg>\r\n            <span>Add</span>\r\n\r\n            {addToCardCount && <i>{addToCardCount}</i>}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\n//! Проверяваме  какви са типовете на пропс.Това което прави typeScript.Той проверява в DB. И ако там нещо се смени хвърля грешка в конзолата на браузъра.\r\n//?.arrayOf(PropTypes.number) - проверява да ли в масива има само числа и ако няма хвърля грешка.\r\nPizza.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  types: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  sizes: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  imageUrl: PropTypes.string.isRequired,\r\n  onClickAddPizza: PropTypes.func,\r\n  addToCardCount: PropTypes.number,\r\n};\r\n//? Обеснявам  на компонента,че без тези данни неможе да живее и за даняма промеблеми да се хвърля грешка и приложенито да спре му задавам някакви начални (defaultProps) стойности за пропс.Това всичко ако нещо липсва  в DB.\r\nPizza.defaultProps = {\r\n  types: [],\r\n  size: [],\r\n  price: 0,\r\n  name: '----',\r\n};\r\nexport default Pizza;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\nfunction LoadingPizzaBlock() {\r\n  return (\r\n    <div>\r\n      <ContentLoader\r\n        className='pizza-block'\r\n        speed={2}\r\n        width={280}\r\n        height={460}\r\n        viewBox='0 0 280 460'\r\n        backgroundColor='#b30f0f'\r\n        foregroundColor='#ecebeb'>\r\n        <circle cx='134' cy='136' r='134' />\r\n        <circle cx='142' cy='132' r='5' />\r\n        <rect x='4' y='281' rx='3' ry='3' width='280' height='26' />\r\n        <rect x='0' y='312' rx='6' ry='6' width='280' height='84' />\r\n        <rect x='10' y='480' rx='0' ry='0' width='123' height='13' />\r\n        <rect x='4' y='405' rx='3' ry='3' width='91' height='31' />\r\n        <rect x='145' y='402' rx='14' ry='14' width='129' height='53' />\r\n      </ContentLoader>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingPizzaBlock;\r\n","import React from 'react';\nimport './components/scss/App.scss';\n\nimport { Header } from './components';\nimport { Home, Card } from './pages';\nimport { Route } from 'react-router-dom';\n\nfunction App() {\n  //useEffect(() => {\n  //  fetch('http://localhost:3000/db.json')\n  //    .then((resp) => resp.json())\n  //    .then((json) => {\n  //      setPizzas(json.pizzas);\n\n  //    });\n  //}, []);\n  return (\n    <div className='wrapper'>\n      <Header />\n      <div className='content'>\n        <Route path='/' component={Home} exact />\n        <Route path='/card' component={Card} exact />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const SET_SORT_BY = 'SET_SORT_BY';\r\nconst SET_CATEGORY = 'SET_CATEGORY';\r\n//?====================================================\r\nconst initialState = {\r\n  category: null,\r\n  sortBy: {\r\n    type: 'popular',\r\n    order: 'desc',\r\n  },\r\n};\r\n//?====================================================\r\nconst filters = (state = initialState, action) => {\r\n  if (action.type === SET_SORT_BY) {\r\n    return {\r\n      ...state,\r\n      sortBy: action.payload,\r\n    };\r\n  }\r\n  if (action.type === SET_CATEGORY) {\r\n    return {\r\n      ...state,\r\n      category: action.payload,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\nexport default filters;\r\n","const setPizzas = 'SET_PIZZAS';\r\nconst SET_LOADED = 'SET_LOADED';\r\n//?====================================================\r\nconst initialState = {\r\n  items: [],\r\n  isLoaded: false,\r\n};\r\n//?====================================================\r\nfunction pizzas(state = initialState, action) {\r\n  switch (action.type) {\r\n    case setPizzas:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        isLoaded: true,\r\n      };\r\n\r\n    case SET_LOADED:\r\n      return {\r\n        ...state,\r\n        isLoaded: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default pizzas;\r\n","const addPizzCard = 'ADD_PIZZA_CARD';\r\nconst clearCart = 'CLEAR_CART';\r\nconst removeCartItem = 'REMOVE_CART_ITEM';\r\nconst onClickPlusCart = 'PLUS_CART_ITEM';\r\nconst onClickMinusCart = 'MINUS_CART_ITEM';\r\n//?====================================================\r\nconst initialState = {\r\n  items: {}, //! вземаме всичко за дадената пица което е един обект с данни за нея цена,размер,вид и след това ще ги добавяме по id в кошницата само тези който си е избрал ползвателя.Например избирам Пиперони 26см. традиционна в  количката се добавя нейното ID и цена след това друга и пак се добавя ID и цените се натрупват(събират една с друга) и така ще се покзва броя на пиците който съм избрал и колко е ми струват.\r\n  totalPrice: 0, //!брой пици\r\n  totalCount: 0, //! сумата на всички пици в количката\r\n};\r\n//?====================================================\r\n\r\nconst getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\r\nconst _get = (obj, path) => {\r\n  const [firstKey, ...keys] = path.split('.');\r\n  return keys.reduce((val, key) => {\r\n    return val[key];\r\n  }, obj[firstKey]);\r\n};\r\n\r\nconst getTotalSum = (obj, path) => {\r\n  return Object.values(obj).reduce((sum, obj) => {\r\n    const value = _get(obj, path);\r\n    return sum + value;\r\n  }, 0);\r\n};\r\nfunction Card(state = initialState, action) {\r\n  switch (action.type) {\r\n    case addPizzCard: {\r\n      //Разеснявам редовете: Ако лиспсва итема с такова id създай в item един масив в който има един обект.Но ако го има id тогава създай такъв масив като първо вземеш всички стари значения и накрая добави новия обект\r\n      //[...state.items[action.payload.id].items - това означава мини по целия масив\r\n      const currentIdPizzaItem = !state.items[action.payload.id]\r\n        ? [action.payload]\r\n        : [...state.items[action.payload.id].items, action.payload];\r\n\r\n      const newItems = {\r\n        ...state.items,\r\n        [action.payload.id]: {\r\n          items: currentIdPizzaItem,\r\n          totalPrice: getTotalPrice(currentIdPizzaItem),\r\n        },\r\n      };\r\n\r\n      const totalCount = getTotalSum(newItems, 'items.length');\r\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n      //const items = Object.values(newItems).map((obj) => obj.items);\r\n      //const allPizzas = [].concat.apply([], items);\r\n      //const totalPrice = getTotalPrice(allPizzas);\r\n\r\n      return {\r\n        //TODO: Вземаме стария state следтова items създаваме нов обект след това id което ние е подадено от това коя пица сме избрали(всяка пица си има собствено id) след това вземаме стария масив с пици и тяхните  id и създаваме нов масив от старите обекти(това са пиците и тяхните свойства(цена,размет ...) и към тях накрая добавяме новото id  на новата пица която е билата избрана) избирам пица с id=2 в количката се добавя след това пица с id=3 в количката се добавя също и тя и така докато не се завърши поръчката.За да може да не толкова трудно за четене се използва библиотека(YARN ADD IMMER  --SAVE)\r\n\r\n        ...state,\r\n        items: newItems,\r\n        totalCount,\r\n        //totalCount: allPizzas.length, //? Получаваме масив\r\n        totalPrice,\r\n      };\r\n    }\r\n    case clearCart:\r\n      return {\r\n        totalPrice: 0,\r\n        totalCount: 0,\r\n        items: {},\r\n      };\r\n    case removeCartItem: {\r\n      const newItems = {\r\n        ...state.items,\r\n      };\r\n      const currentTotalPrice = newItems[action.payload].totalPrice;\r\n      const currentTotalCount = newItems[action.payload].items.length;\r\n      delete newItems[action.payload];\r\n\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        totalPrice: state.totalPrice - currentTotalPrice,\r\n        totalCount: state.totalCount - currentTotalCount,\r\n      };\r\n    }\r\n    case onClickPlusCart: {\r\n      const newObjItems = [\r\n        ...state.items[action.payload].items,\r\n        state.items[action.payload].items[0],\r\n      ];\r\n      const newItems = {\r\n        ...state.items,\r\n        [action.payload]: {\r\n          items: newObjItems,\r\n          totalPrice: getTotalPrice(newObjItems),\r\n        },\r\n      };\r\n\r\n      const totalCount = getTotalSum(newItems, 'items.length');\r\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        totalCount,\r\n        totalPrice,\r\n      };\r\n    }\r\n    case onClickMinusCart: {\r\n      const oldItems = state.items[action.payload].items;\r\n      const newObjItems =\r\n        oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\r\n      const newItems = {\r\n        ...state.items,\r\n        [action.payload]: {\r\n          items: newObjItems,\r\n          totalPrice: getTotalPrice(newObjItems),\r\n        },\r\n      };\r\n\r\n      const totalCount = getTotalSum(newItems, 'items.length');\r\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        totalCount,\r\n        totalPrice,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Card;\r\n//totalPizzaPriceInCart = totalPrice;\r\n","import { combineReducers } from 'redux';\r\nimport filters from './filters';\r\nimport pizzas from './pizzas';\r\nimport card from './card';\r\n//?====================================================\r\nconst rootReducer = combineReducers({\r\n  filters,\r\n  pizzas,\r\n  card,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}